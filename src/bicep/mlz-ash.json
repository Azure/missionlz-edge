{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "6573173561559113742"
    }
  },
  "parameters": {
    "resourcePrefix": {
      "type": "string",
      "metadata": {
        "description": "A prefix, 3-10 alphanumeric characters without whitespace, used to prefix resources and generate uniqueness for resources with globally unique naming requirements like Storage Accounts and Log Analytics Workspaces"
      },
      "maxLength": 10,
      "minLength": 3
    },
    "resourceSuffix": {
      "type": "string",
      "defaultValue": "mlz",
      "metadata": {
        "description": "A suffix, 3 to 6 characters in length, to append to resource names (e.g. \"dev\", \"test\", \"prod\", \"mlz\"). It defaults to \"mlz\"."
      },
      "maxLength": 6,
      "minLength": 3
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "The region to deploy resources into. It defaults to the deployment location."
      }
    },
    "tenantId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the tenant ID of a user/subscription"
      }
    },
    "keyVaultAccessPolicyObjectId": {
      "type": "string",
      "metadata": {
        "description": "Specifies the object ID of a user, service principal or security group in the Azure Active Directory tenant for the vault. The object ID must be unique for the list of access policies. Get it by using Get-AzADUser or Get-AzADServicePrincipal cmdlets."
      }
    },
    "deploymentNameSuffix": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "A suffix to use for naming deployments uniquely. It defaults to the Bicep resolution of the \"utcNow()\" function."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "A string dictionary of tags to add to deployed resources. See https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/tag-resources?tabs=json#arm-templates for valid settings."
      }
    },
    "hubVirtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.90.0.0/16",
      "metadata": {
        "description": "The CIDR Virtual Network Address Prefix for the Hub Virtual Network."
      }
    },
    "mgmtSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.90.0.0/24",
      "metadata": {
        "description": "The CIDR Subnet Address Prefix for the Hub management subnet. It must be in the Hub Virtual Network space."
      }
    },
    "extSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.90.1.0/24",
      "metadata": {
        "description": "The CIDR Subnet Address Prefix for the Hub external subnet. It must be in the Hub Virtual Network space."
      }
    },
    "intSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.90.2.0/24",
      "metadata": {
        "description": "The CIDR Subnet Address Prefix for the Hub internal subnet. It must be in the Hub Virtual Network space."
      }
    },
    "vdmsSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.90.3.0/24",
      "metadata": {
        "description": "The CIDR Subnet Address Prefix for the Hub VDMS subnet. It must be in the Hub Virtual Network space."
      }
    },
    "identityVirtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.92.0.0/16",
      "metadata": {
        "description": "The CIDR Virtual Network Address Prefix for the Identity Virtual Network."
      }
    },
    "identitySubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.92.0.0/24",
      "metadata": {
        "description": "The CIDR Subnet Address Prefix for the default Identity subnet. It must be in the Identity Virtual Network space."
      }
    },
    "operationsVirtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.91.0.0/16",
      "metadata": {
        "description": "The CIDR Virtual Network Address Prefix for the Operations Virtual Network."
      }
    },
    "operationsSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.91.0.0/24",
      "metadata": {
        "description": "The CIDR Subnet Address Prefix for the default Operations subnet. It must be in the Operations Virtual Network space."
      }
    },
    "sharedServicesVirtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "10.93.0.0/16",
      "metadata": {
        "description": "The CIDR Virtual Network Address Prefix for the Shared Services Virtual Network."
      }
    },
    "sharedServicesSubnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.93.0.0/24",
      "metadata": {
        "description": "The CIDR Subnet Address Prefix for the default Shared Services subnet. It must be in the Shared Services Virtual Network space."
      }
    },
    "f5VmAdminUsername": {
      "type": "string",
      "defaultValue": "f5admin",
      "metadata": {
        "description": "The administrator username for the F5 firewall appliance. It defaults to \"f5admin\"."
      }
    },
    "f5VmAuthenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "metadata": {
        "description": "[sshPublicKey/password] The authentication type for the F5 firewall appliance. It defaults to \"password\"."
      },
      "allowedValues": [
        "sshPublicKey",
        "password"
      ]
    },
    "f5VmAdminPasswordOrKey": {
      "type": "secureString",
      "defaultValue": "[substring(newGuid(), 0, 15)]",
      "minLength": 14,
      "metadata": {
        "description": "The administrator password or public SSH key for the F5 firewall appliance. See https://docs.microsoft.com/en-us/azure/virtual-machines/linux/faq#what-are-the-password-requirements-when-creating-a-vm- for password requirements."
      }
    },
    "f5VmSize": {
      "type": "string",
      "defaultValue": "Standard_DS3_v2",
      "metadata": {
        "description": "The size of the F5 firewall appliance. It defaults to \"Standard_DS3_v2\"."
      }
    },
    "f5VmOsDiskCreateOption": {
      "type": "string",
      "defaultValue": "FromImage",
      "metadata": {
        "description": "The disk creation option of the F5 firewall appliance. It defaults to \"FromImage\"."
      }
    },
    "f5VmOsDiskType": {
      "type": "string",
      "defaultValue": "Premium_LRS",
      "metadata": {
        "description": "The disk type of the F5 firewall appliance. It defaults to \"Premium_LRS\"."
      }
    },
    "f5VmImagePublisher": {
      "type": "string",
      "defaultValue": "f5-networks",
      "metadata": {
        "description": "The image publisher of the F5 firewall appliance. It defaults to \"f5-networks\"."
      }
    },
    "f5VmImageOffer": {
      "type": "string",
      "defaultValue": "f5-big-ip-best",
      "metadata": {
        "description": "The image offer of the F5 firewall appliance. It defaults to \"f5-big-ip-best\"."
      }
    },
    "f5VmImageSku": {
      "type": "string",
      "defaultValue": "f5-bigip-virtual-edition-best-byol",
      "metadata": {
        "description": "The image SKU of the F5 firewall appliance. It defaults to \"f5-bigip-virtual-edition-best-byol\"."
      }
    },
    "f5VmImageVersion": {
      "type": "string",
      "defaultValue": "14.0.001000",
      "metadata": {
        "description": "The image version of the F5 firewall appliance. It defaults to \"14.0.001000\"."
      }
    },
    "f5privateIPAddressAllocationMethod": {
      "type": "string",
      "defaultValue": "Dynamic",
      "metadata": {
        "description": "[Static/Dynamic] The public IP Address allocation method for the F5 firewall appliance. It defaults to \"Dynamic\"."
      },
      "allowedValues": [
        "Static",
        "Dynamic"
      ]
    },
    "hubNetworkSecurityGroupRules": {
      "type": "array",
      "defaultValue": [
        {
          "name": "allow_SSH",
          "properties": {
            "description": "Allows SSH traffic",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "22",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 100,
            "direction": "Inbound"
          }
        },
        {
          "name": "allow_RDP",
          "properties": {
            "description": "Allows SSH traffic",
            "protocol": "Tcp",
            "sourcePortRange": "*",
            "destinationPortRange": "3389",
            "sourceAddressPrefix": "*",
            "destinationAddressPrefix": "*",
            "access": "Allow",
            "priority": 120,
            "direction": "Inbound"
          }
        }
      ],
      "metadata": {
        "description": "An array of Network Security Group Rules to apply to the Hub Virtual Network. Default adds SSH and RDP to default rule set. See https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups/securityrules?tabs=bicep#securityrulepropertiesformat for valid settings."
      }
    },
    "identityNetworkSecurityGroupRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of Network Security Group Rules to apply to the Identity Virtual Network. See https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups/securityrules?tabs=bicep#securityrulepropertiesformat for valid settings."
      }
    },
    "operationsNetworkSecurityGroupRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of Network Security Group rules to apply to the Operations Virtual Network. See https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups/securityrules?tabs=bicep#securityrulepropertiesformat for valid settings."
      }
    },
    "sharedServicesNetworkSecurityGroupRules": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "An array of Network Security Group rules to apply to the SharedServices Virtual Network. See https://docs.microsoft.com/en-us/azure/templates/microsoft.network/networksecuritygroups/securityrules?tabs=bicep#securityrulepropertiesformat for valid settings."
      }
    }
  },
  "functions": [],
  "variables": {
    "resourceToken": "resource_token",
    "nameToken": "name_token",
    "namingConvention": "[format('{0}-{1}-{2}-{3}', toLower(parameters('resourcePrefix')), variables('resourceToken'), variables('nameToken'), toLower(parameters('resourceSuffix')))]",
    "ipConfigurationNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'ipconf')]",
    "networkInterfaceNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'nic')]",
    "networkSecurityGroupNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'nsg')]",
    "publicIpAddressNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'pip')]",
    "resourceGroupNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'rg')]",
    "subnetNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'snet')]",
    "virtualMachineNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'vm')]",
    "virtualNetworkNamingConvention": "[replace(variables('namingConvention'), variables('resourceToken'), 'vnet')]",
    "hubName": "hub",
    "hubResourceGroupName": "[replace(variables('resourceGroupNamingConvention'), variables('nameToken'), variables('hubName'))]",
    "hubVirtualNetworkName": "[replace(variables('virtualNetworkNamingConvention'), variables('nameToken'), variables('hubName'))]",
    "hubNetworkSecurityGroupName": "[replace(variables('networkSecurityGroupNamingConvention'), variables('nameToken'), variables('hubName'))]",
    "mgmtSubnetName": "[replace(variables('subnetNamingConvention'), variables('nameToken'), 'mgmt')]",
    "extSubnetName": "[replace(variables('subnetNamingConvention'), variables('nameToken'), 'ext')]",
    "intSubnetName": "[replace(variables('subnetNamingConvention'), variables('nameToken'), 'int')]",
    "vdmsSubnetName": "[replace(variables('subnetNamingConvention'), variables('nameToken'), 'vdms')]",
    "hubSubnets": [
      {
        "name": "[variables('mgmtSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('mgmtSubnetAddressPrefix')]"
        }
      },
      {
        "name": "[variables('intSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('intSubnetAddressPrefix')]"
        }
      },
      {
        "name": "[variables('extSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('extSubnetAddressPrefix')]"
        }
      },
      {
        "name": "[variables('vdmsSubnetName')]",
        "properties": {
          "addressPrefix": "[parameters('vdmsSubnetAddressPrefix')]"
        }
      }
    ],
    "identityName": "identity",
    "identityResourceGroupName": "[replace(variables('resourceGroupNamingConvention'), variables('nameToken'), variables('identityName'))]",
    "identityVirtualNetworkName": "[replace(variables('virtualNetworkNamingConvention'), variables('nameToken'), variables('identityName'))]",
    "identityNetworkSecurityGroupName": "[replace(variables('networkSecurityGroupNamingConvention'), variables('nameToken'), variables('identityName'))]",
    "identitySubnetName": "[replace(variables('subnetNamingConvention'), variables('nameToken'), variables('identityName'))]",
    "operationsName": "operations",
    "operationsResourceGroupName": "[replace(variables('resourceGroupNamingConvention'), variables('nameToken'), variables('operationsName'))]",
    "operationsVirtualNetworkName": "[replace(variables('virtualNetworkNamingConvention'), variables('nameToken'), variables('operationsName'))]",
    "operationsNetworkSecurityGroupName": "[replace(variables('networkSecurityGroupNamingConvention'), variables('nameToken'), variables('operationsName'))]",
    "operationsSubnetName": "[replace(variables('subnetNamingConvention'), variables('nameToken'), variables('operationsName'))]",
    "sharedServicesName": "sharedServices",
    "sharedServicesResourceGroupName": "[replace(variables('resourceGroupNamingConvention'), variables('nameToken'), variables('sharedServicesName'))]",
    "sharedServicesVirtualNetworkName": "[replace(variables('virtualNetworkNamingConvention'), variables('nameToken'), variables('sharedServicesName'))]",
    "sharedServicesNetworkSecurityGroupName": "[replace(variables('networkSecurityGroupNamingConvention'), variables('nameToken'), variables('sharedServicesName'))]",
    "sharedServicesSubnetName": "[replace(variables('subnetNamingConvention'), variables('nameToken'), variables('sharedServicesName'))]",
    "f5vm01extIpConfigurationName": "[replace(variables('ipConfigurationNamingConvention'), variables('nameToken'), 'f5vm01-ext')]",
    "f5vm01intIpConfigurationName": "[replace(variables('ipConfigurationNamingConvention'), variables('nameToken'), 'f5vm01-int')]",
    "f5vm01mgmtIpConfigurationName": "[replace(variables('ipConfigurationNamingConvention'), variables('nameToken'), 'f5vm01-mgmt')]",
    "f5vm01extNicName": "[replace(variables('networkInterfaceNamingConvention'), variables('nameToken'), 'f5vm01-ext')]",
    "f5vm01intNicName": "[replace(variables('networkInterfaceNamingConvention'), variables('nameToken'), 'f5vm01-int')]",
    "f5vm01mgmtNicName": "[replace(variables('networkInterfaceNamingConvention'), variables('nameToken'), 'f5vm01-mgmt')]",
    "f5vm01VmName": "[replace(variables('virtualMachineNamingConvention'), variables('nameToken'), 'f5-01')]",
    "f5vm01PublicIPAddressName": "[replace(variables('publicIpAddressNamingConvention'), variables('nameToken'), 'f5-01')]",
    "f5publicIPAddressAllocationMethod": "Static",
    "spokes": [
      {
        "name": "[variables('operationsName')]",
        "resourceGroupName": "[variables('operationsResourceGroupName')]",
        "virtualNetworkName": "[variables('operationsVirtualNetworkName')]",
        "virtualNetworkAddressPrefix": "[parameters('operationsVirtualNetworkAddressPrefix')]",
        "networkSecurityGroupName": "[variables('operationsNetworkSecurityGroupName')]",
        "networkSecurityGroupRules": "[parameters('operationsNetworkSecurityGroupRules')]",
        "subnetName": "[variables('operationsSubnetName')]",
        "subnetAddressPrefix": "[parameters('operationsSubnetAddressPrefix')]"
      },
      {
        "name": "[variables('identityName')]",
        "resourceGroupName": "[variables('identityResourceGroupName')]",
        "virtualNetworkName": "[variables('identityVirtualNetworkName')]",
        "virtualNetworkAddressPrefix": "[parameters('identityVirtualNetworkAddressPrefix')]",
        "networkSecurityGroupName": "[variables('identityNetworkSecurityGroupName')]",
        "networkSecurityGroupRules": "[parameters('identityNetworkSecurityGroupRules')]",
        "subnetName": "[variables('identitySubnetName')]",
        "subnetAddressPrefix": "[parameters('identitySubnetAddressPrefix')]"
      },
      {
        "name": "[variables('sharedServicesName')]",
        "resourceGroupName": "[variables('sharedServicesResourceGroupName')]",
        "virtualNetworkName": "[variables('sharedServicesVirtualNetworkName')]",
        "virtualNetworkAddressPrefix": "[parameters('sharedServicesVirtualNetworkAddressPrefix')]",
        "networkSecurityGroupName": "[variables('sharedServicesNetworkSecurityGroupName')]",
        "networkSecurityGroupRules": "[parameters('sharedServicesNetworkSecurityGroupRules')]",
        "subnetName": "[variables('sharedServicesSubnetName')]",
        "subnetAddressPrefix": "[parameters('sharedServicesSubnetAddressPrefix')]"
      }
    ],
    "defaultTags": {
      "resourcePrefix": "[parameters('resourcePrefix')]",
      "resourceSuffix": "[parameters('resourceSuffix')]",
      "DeploymentType": "MissionLandingZoneARM"
    },
    "calculatedTags": "[union(parameters('tags'), variables('defaultTags'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('deploy-rg-hub-{0}', parameters('deploymentNameSuffix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('hubResourceGroupName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('calculatedTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "16903825927909860381"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2019-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "location": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')), '2019-05-01', 'full').location]"
            }
          }
        }
      }
    },
    {
      "copy": {
        "name": "spokeResourceGroups",
        "count": "[length(variables('spokes'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('deploy-rg-{0}-{1}', variables('spokes')[copyIndex()].name, parameters('deploymentNameSuffix'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('spokes')[copyIndex()].resourceGroupName]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('calculatedTags')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "16903825927909860381"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2019-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "location": {
              "type": "string",
              "value": "[reference(subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name')), '2019-05-01', 'full').location]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('deploy-vnet-hub-{0}', parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[variables('hubResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('hubVirtualNetworkName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[parameters('tags')]"
          },
          "addressPrefix": {
            "value": "[parameters('hubVirtualNetworkAddressPrefix')]"
          },
          "subnets": {
            "value": "[variables('hubSubnets')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "5037285071021447400"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "addressPrefix": {
              "type": "string"
            },
            "subnets": {
              "type": "array"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2018-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "[parameters('addressPrefix')]"
                  ]
                },
                "subnets": "[parameters('subnets')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
            },
            "subnets": {
              "type": "array",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('name'))).subnets]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-hub-{0}', parameters('deploymentNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('deploy-nsg-hub-{0}', parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[variables('hubResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "name": {
            "value": "[variables('hubNetworkSecurityGroupName')]"
          },
          "securityRules": {
            "value": "[parameters('hubNetworkSecurityGroupRules')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "2936571795199835323"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "securityRules": {
              "type": "array"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2018-11-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "securityRules": "[parameters('securityRules')]"
              }
            }
          ],
          "outputs": {
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-hub-{0}', parameters('deploymentNameSuffix')))]"
      ]
    },
    {
      "condition": "[equals(parameters('f5VmAuthenticationType'), 'sshPublicKey')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('deploy-f5vm01Sshkv-hub-{0}', parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[variables('hubResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "resourcePrefix": {
            "value": "[parameters('resourcePrefix')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tenantId": {
            "value": "[parameters('tenantId')]"
          },
          "keyVaultAccessPolicyObjectId": {
            "value": "[parameters('keyVaultAccessPolicyObjectId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "6230722465258008271"
            }
          },
          "parameters": {
            "resourcePrefix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "tenantId": {
              "type": "string"
            },
            "keyVaultAccessPolicyObjectId": {
              "type": "string"
            },
            "utcValue": {
              "type": "string",
              "defaultValue": "[utcNow()]"
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "[format('{0}-kv', parameters('resourcePrefix'))]"
            },
            "keyVaultAccessPolicyName": {
              "type": "string",
              "defaultValue": "add",
              "allowedValues": [
                "add",
                "update",
                "remove"
              ]
            },
            "keyVaultSecretPerms": {
              "type": "array",
              "defaultValue": [
                "all"
              ]
            },
            "generatedSshKey": {
              "type": "object",
              "defaultValue": "[json('{\"keyinfo\":{\"privateKey\":\"\",\"publicKey\":\"\"}}\r\n')]"
            }
          },
          "functions": [],
          "variables": {
            "publicKeySecretName": "sshPublicKey",
            "privateKeySecretName": "sshPrivateKey"
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), variables('publicKeySecretName'))]",
              "properties": {
                "value": "[parameters('generatedSshKey').keyinfo.publicKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('create_{0}_{1}', parameters('keyVaultName'), parameters('utcValue')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}', parameters('keyVaultName'), variables('privateKeySecretName'))]",
              "properties": {
                "value": "[parameters('generatedSshKey').keyinfo.privateKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('create_{0}_{1}', parameters('keyVaultName'), parameters('utcValue')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('create_{0}_{1}', parameters('keyVaultName'), parameters('utcValue'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tenantId": {
                    "value": "[parameters('tenantId')]"
                  },
                  "objectId": {
                    "value": "[parameters('keyVaultAccessPolicyObjectId')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "11850367119633852651"
                    }
                  },
                  "parameters": {
                    "location": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "objectId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "enabledForDeployment": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "enabledForDiskEncryption": {
                      "type": "bool",
                      "defaultValue": false
                    },
                    "enabledForTemplateDeployment": {
                      "type": "bool",
                      "defaultValue": true
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "standard",
                      "allowedValues": [
                        "standard",
                        "premium"
                      ],
                      "metadata": {
                        "description": "SKU for the vault"
                      }
                    },
                    "keysPermissions": {
                      "type": "array",
                      "defaultValue": [
                        "list"
                      ],
                      "metadata": {
                        "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
                      }
                    },
                    "secretsPermissions": {
                      "type": "array",
                      "defaultValue": [
                        "list"
                      ],
                      "metadata": {
                        "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
                      }
                    }
                  },
                  "functions": [],
                  "variables": {
                    "accessPolicies": [
                      {
                        "objectId": "[parameters('objectId')]",
                        "tenantId": "[parameters('tenantId')]",
                        "permissions": {
                          "keys": "[parameters('keysPermissions')]",
                          "secrets": "[parameters('secretsPermissions')]"
                        }
                      }
                    ]
                  },
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults",
                      "apiVersion": "2016-10-01",
                      "name": "[parameters('keyVaultName')]",
                      "location": "[parameters('location')]",
                      "tags": {},
                      "properties": {
                        "enabledForDeployment": "[parameters('enabledForDeployment')]",
                        "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                        "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                        "accessPolicies": "[variables('accessPolicies')]",
                        "tenantId": "[parameters('tenantId')]",
                        "sku": {
                          "name": "[parameters('sku')]",
                          "family": "A"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "kvName": {
                      "type": "string",
                      "value": "[parameters('keyVaultName')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('create_keyVaultAccessPolicy_{0}', parameters('utcValue'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "keyVaultAccessPolicyName": {
                    "value": "[parameters('keyVaultAccessPolicyName')]"
                  },
                  "keyVaultName": {
                    "value": "[parameters('keyVaultName')]"
                  },
                  "tenantId": {
                    "value": "[parameters('tenantId')]"
                  },
                  "keyVaultAccessPolicyObjectId": {
                    "value": "[parameters('keyVaultAccessPolicyObjectId')]"
                  },
                  "secretPerms": {
                    "value": "[parameters('keyVaultSecretPerms')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "17975882920158647454"
                    }
                  },
                  "parameters": {
                    "tenantId": {
                      "type": "string"
                    },
                    "keyVaultName": {
                      "type": "string"
                    },
                    "keyVaultAccessPolicyName": {
                      "type": "string"
                    },
                    "keyVaultAccessPolicyObjectId": {
                      "type": "string"
                    },
                    "keyVaultAccessPolicyApplicationId": {
                      "type": "string",
                      "defaultValue": ""
                    },
                    "secretPerms": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "certPerms": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "keyPerms": {
                      "type": "array",
                      "defaultValue": []
                    },
                    "storagePerms": {
                      "type": "array",
                      "defaultValue": []
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.KeyVault/vaults/accessPolicies",
                      "apiVersion": "2019-09-01",
                      "name": "[format('{0}/{1}', parameters('keyVaultName'), parameters('keyVaultAccessPolicyName'))]",
                      "properties": {
                        "accessPolicies": [
                          {
                            "applicationId": "[parameters('keyVaultAccessPolicyApplicationId')]",
                            "objectId": "[parameters('keyVaultAccessPolicyObjectId')]",
                            "permissions": {
                              "certificates": "[parameters('certPerms')]",
                              "keys": "[parameters('keyPerms')]",
                              "secrets": "[parameters('secretPerms')]",
                              "storage": "[parameters('storagePerms')]"
                            },
                            "tenantId": "[parameters('tenantId')]"
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('create_{0}_{1}', parameters('keyVaultName'), parameters('utcValue')))]"
              ]
            }
          ],
          "outputs": {
            "publicKey": {
              "type": "string",
              "value": "[parameters('generatedSshKey').keyinfo.publicKey]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-hub-{0}', parameters('deploymentNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('deploy-f5vm01-hub-{0}', parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[variables('hubResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "adminPasswordOrKey": {
            "value": "[if(equals(parameters('f5VmAuthenticationType'), 'password'), parameters('f5VmAdminPasswordOrKey'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('hubResourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-f5vm01Sshkv-hub-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.publicKey.value)]"
          },
          "adminUsername": {
            "value": "[parameters('f5VmAdminUsername')]"
          },
          "authenticationType": {
            "value": "[parameters('f5VmAuthenticationType')]"
          },
          "extIpConfigurationName": {
            "value": "[variables('f5vm01extIpConfigurationName')]"
          },
          "extNicName": {
            "value": "[variables('f5vm01extNicName')]"
          },
          "extPrivateIPAddressAllocationMethod": {
            "value": "[parameters('f5privateIPAddressAllocationMethod')]"
          },
          "extPublicIPAddressAllocationMethod": {
            "value": "[variables('f5publicIPAddressAllocationMethod')]"
          },
          "extPublicIpName": {
            "value": "[variables('f5vm01PublicIPAddressName')]"
          },
          "extSubnetName": {
            "value": "[variables('extSubnetName')]"
          },
          "intIpConfigurationName": {
            "value": "[variables('f5vm01intIpConfigurationName')]"
          },
          "intNicName": {
            "value": "[variables('f5vm01intNicName')]"
          },
          "intPrivateIPAddressAllocationMethod": {
            "value": "[parameters('f5privateIPAddressAllocationMethod')]"
          },
          "intSubnetName": {
            "value": "[variables('intSubnetName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "mgmtIpConfigurationName": {
            "value": "[variables('f5vm01mgmtIpConfigurationName')]"
          },
          "mgmtNicName": {
            "value": "[variables('f5vm01mgmtNicName')]"
          },
          "mgmtPrivateIPAddressAllocationMethod": {
            "value": "[parameters('f5privateIPAddressAllocationMethod')]"
          },
          "mgmtSubnetName": {
            "value": "[variables('mgmtSubnetName')]"
          },
          "networkSecurityGroupId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('hubResourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-nsg-hub-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.id.value]"
          },
          "deploymentNameSuffix": {
            "value": "[parameters('deploymentNameSuffix')]"
          },
          "osDiskCreateOption": {
            "value": "[parameters('f5VmOsDiskCreateOption')]"
          },
          "virtualNetworkName": {
            "value": "[variables('hubVirtualNetworkName')]"
          },
          "vmName": {
            "value": "[variables('f5vm01VmName')]"
          },
          "vmOsDiskType": {
            "value": "[parameters('f5VmOsDiskType')]"
          },
          "vmImageOffer": {
            "value": "[parameters('f5VmImageOffer')]"
          },
          "vmImagePublisher": {
            "value": "[parameters('f5VmImagePublisher')]"
          },
          "vmImageSku": {
            "value": "[parameters('f5VmImageSku')]"
          },
          "vmImageVersion": {
            "value": "[parameters('f5VmImageVersion')]"
          },
          "vmSize": {
            "value": "[parameters('f5VmSize')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "5307466268951845068"
            }
          },
          "parameters": {
            "deploymentNameSuffix": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "networkSecurityGroupId": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            },
            "authenticationType": {
              "type": "string",
              "defaultValue": "password",
              "allowedValues": [
                "sshPublicKey",
                "password"
              ]
            },
            "adminPasswordOrKey": {
              "type": "secureString",
              "minLength": 14
            },
            "adminUsername": {
              "type": "string"
            },
            "osDiskCreateOption": {
              "type": "string"
            },
            "vmName": {
              "type": "string"
            },
            "vmOsDiskType": {
              "type": "string"
            },
            "vmImageOffer": {
              "type": "string"
            },
            "vmImagePublisher": {
              "type": "string"
            },
            "vmImageSku": {
              "type": "string"
            },
            "vmImageVersion": {
              "type": "string"
            },
            "vmSize": {
              "type": "string"
            },
            "extIpConfigurationName": {
              "type": "string"
            },
            "extNicName": {
              "type": "string"
            },
            "extPrivateIPAddressAllocationMethod": {
              "type": "string"
            },
            "extPublicIPAddressAllocationMethod": {
              "type": "string"
            },
            "extPublicIpName": {
              "type": "string"
            },
            "extSubnetName": {
              "type": "string"
            },
            "extPublicIP": {
              "type": "string",
              "defaultValue": "yes",
              "allowedValues": [
                "yes",
                "no"
              ]
            },
            "intIpConfigurationName": {
              "type": "string"
            },
            "intNicName": {
              "type": "string"
            },
            "intPrivateIPAddressAllocationMethod": {
              "type": "string"
            },
            "intSubnetName": {
              "type": "string"
            },
            "intPublicIP": {
              "type": "string",
              "defaultValue": "no",
              "allowedValues": [
                "yes",
                "no"
              ]
            },
            "mgmtIpConfigurationName": {
              "type": "string"
            },
            "mgmtNicName": {
              "type": "string"
            },
            "mgmtPrivateIPAddressAllocationMethod": {
              "type": "string"
            },
            "mgmtSubnetName": {
              "type": "string"
            },
            "mgmtPublicIP": {
              "type": "string",
              "defaultValue": "no",
              "allowedValues": [
                "yes",
                "no"
              ]
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('create-fw-pubip-{0}', parameters('deploymentNameSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('extPublicIpName')]"
                  },
                  "publicIpAllocationMethod": {
                    "value": "[parameters('extPublicIPAddressAllocationMethod')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "17442717648676936167"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "skuName": {
                      "type": "string",
                      "defaultValue": "Basic"
                    },
                    "publicIpAllocationMethod": {
                      "type": "string"
                    },
                    "availabilityZones": {
                      "type": "array",
                      "defaultValue": []
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/publicIPAddresses",
                      "apiVersion": "2018-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "sku": {
                        "name": "[parameters('skuName')]"
                      },
                      "properties": {
                        "publicIPAllocationMethod": "[parameters('publicIpAllocationMethod')]"
                      },
                      "zones": "[parameters('availabilityZones')]"
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('name'))]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('create-ext-nic-{0}', parameters('deploymentNameSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ipConfigurationName": {
                    "value": "[parameters('extIpConfigurationName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('extNicName')]"
                  },
                  "networkSecurityGroupId": {
                    "value": "[parameters('networkSecurityGroupId')]"
                  },
                  "privateIPAddressAllocationMethod": {
                    "value": "[parameters('extPrivateIPAddressAllocationMethod')]"
                  },
                  "publicIP": {
                    "value": "[parameters('extPublicIP')]"
                  },
                  "publicIPAddressId": {
                    "value": "[reference(resourceId('Microsoft.Resources/deployments', format('create-fw-pubip-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.id.value]"
                  },
                  "subnetId": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('virtualNetworkName'), parameters('extSubnetName')), '/')[0], split(format('{0}/{1}', parameters('virtualNetworkName'), parameters('extSubnetName')), '/')[1])]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "4484141551395522240"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "ipConfigurationName": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "networkSecurityGroupId": {
                      "type": "string"
                    },
                    "privateIPAddressAllocationMethod": {
                      "type": "string"
                    },
                    "publicIP": {
                      "type": "string"
                    },
                    "publicIPAddressId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "functions": [],
                  "variables": {
                    "ipConfig": {
                      "yes": [
                        {
                          "name": "[parameters('ipConfigurationName')]",
                          "properties": {
                            "subnet": {
                              "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "[parameters('privateIPAddressAllocationMethod')]",
                            "publicIPAddress": {
                              "id": "[parameters('publicIPAddressId')]"
                            }
                          }
                        }
                      ],
                      "no": [
                        {
                          "name": "[parameters('ipConfigurationName')]",
                          "properties": {
                            "subnet": {
                              "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "[parameters('privateIPAddressAllocationMethod')]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2018-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "ipConfigurations": "[variables('ipConfig')[parameters('publicIP')]]",
                        "networkSecurityGroup": {
                          "id": "[parameters('networkSecurityGroupId')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "ip": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('name'))).ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('create-fw-pubip-{0}', parameters('deploymentNameSuffix')))]"
              ]
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('create-int-nic-{0}', parameters('deploymentNameSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ipConfigurationName": {
                    "value": "[parameters('intIpConfigurationName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('intNicName')]"
                  },
                  "networkSecurityGroupId": {
                    "value": "[parameters('networkSecurityGroupId')]"
                  },
                  "privateIPAddressAllocationMethod": {
                    "value": "[parameters('intPrivateIPAddressAllocationMethod')]"
                  },
                  "publicIP": {
                    "value": "[parameters('intPublicIP')]"
                  },
                  "subnetId": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('virtualNetworkName'), parameters('intSubnetName')), '/')[0], split(format('{0}/{1}', parameters('virtualNetworkName'), parameters('intSubnetName')), '/')[1])]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "4484141551395522240"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "ipConfigurationName": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "networkSecurityGroupId": {
                      "type": "string"
                    },
                    "privateIPAddressAllocationMethod": {
                      "type": "string"
                    },
                    "publicIP": {
                      "type": "string"
                    },
                    "publicIPAddressId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "functions": [],
                  "variables": {
                    "ipConfig": {
                      "yes": [
                        {
                          "name": "[parameters('ipConfigurationName')]",
                          "properties": {
                            "subnet": {
                              "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "[parameters('privateIPAddressAllocationMethod')]",
                            "publicIPAddress": {
                              "id": "[parameters('publicIPAddressId')]"
                            }
                          }
                        }
                      ],
                      "no": [
                        {
                          "name": "[parameters('ipConfigurationName')]",
                          "properties": {
                            "subnet": {
                              "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "[parameters('privateIPAddressAllocationMethod')]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2018-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "ipConfigurations": "[variables('ipConfig')[parameters('publicIP')]]",
                        "networkSecurityGroup": {
                          "id": "[parameters('networkSecurityGroupId')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "ip": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('name'))).ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('create-mgmt-nic-{0}', parameters('deploymentNameSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "ipConfigurationName": {
                    "value": "[parameters('mgmtIpConfigurationName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('mgmtNicName')]"
                  },
                  "networkSecurityGroupId": {
                    "value": "[parameters('networkSecurityGroupId')]"
                  },
                  "privateIPAddressAllocationMethod": {
                    "value": "[parameters('mgmtPrivateIPAddressAllocationMethod')]"
                  },
                  "publicIP": {
                    "value": "[parameters('mgmtPublicIP')]"
                  },
                  "subnetId": {
                    "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', split(format('{0}/{1}', parameters('virtualNetworkName'), parameters('mgmtSubnetName')), '/')[0], split(format('{0}/{1}', parameters('virtualNetworkName'), parameters('mgmtSubnetName')), '/')[1])]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "4484141551395522240"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "ipConfigurationName": {
                      "type": "string"
                    },
                    "subnetId": {
                      "type": "string"
                    },
                    "networkSecurityGroupId": {
                      "type": "string"
                    },
                    "privateIPAddressAllocationMethod": {
                      "type": "string"
                    },
                    "publicIP": {
                      "type": "string"
                    },
                    "publicIPAddressId": {
                      "type": "string",
                      "defaultValue": ""
                    }
                  },
                  "functions": [],
                  "variables": {
                    "ipConfig": {
                      "yes": [
                        {
                          "name": "[parameters('ipConfigurationName')]",
                          "properties": {
                            "subnet": {
                              "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "[parameters('privateIPAddressAllocationMethod')]",
                            "publicIPAddress": {
                              "id": "[parameters('publicIPAddressId')]"
                            }
                          }
                        }
                      ],
                      "no": [
                        {
                          "name": "[parameters('ipConfigurationName')]",
                          "properties": {
                            "subnet": {
                              "id": "[parameters('subnetId')]"
                            },
                            "privateIPAllocationMethod": "[parameters('privateIPAddressAllocationMethod')]"
                          }
                        }
                      ]
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkInterfaces",
                      "apiVersion": "2018-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "ipConfigurations": "[variables('ipConfig')[parameters('publicIP')]]",
                        "networkSecurityGroup": {
                          "id": "[parameters('networkSecurityGroupId')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkInterfaces', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "ip": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/networkInterfaces', parameters('name'))).ipConfigurations[0].properties.privateIPAddress]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "[format('create-f5vm-{0}', parameters('deploymentNameSuffix'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "adminPasswordOrKey": {
                    "value": "[parameters('adminPasswordOrKey')]"
                  },
                  "adminUsername": {
                    "value": "[parameters('adminUsername')]"
                  },
                  "authenticationType": {
                    "value": "[parameters('authenticationType')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "name": {
                    "value": "[parameters('vmName')]"
                  },
                  "networkInterfaces": {
                    "value": [
                      {
                        "id": "[reference(resourceId('Microsoft.Resources/deployments', format('create-mgmt-nic-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.id.value]",
                        "properties": {
                          "primary": true
                        }
                      },
                      {
                        "id": "[reference(resourceId('Microsoft.Resources/deployments', format('create-ext-nic-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.id.value]",
                        "properties": {
                          "primary": false
                        }
                      },
                      {
                        "id": "[reference(resourceId('Microsoft.Resources/deployments', format('create-int-nic-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.id.value]",
                        "properties": {
                          "primary": false
                        }
                      }
                    ]
                  },
                  "osDiskCreateOption": {
                    "value": "[parameters('osDiskCreateOption')]"
                  },
                  "osDiskType": {
                    "value": "[parameters('vmOsDiskType')]"
                  },
                  "vmImageOffer": {
                    "value": "[parameters('vmImageOffer')]"
                  },
                  "vmImagePublisher": {
                    "value": "[parameters('vmImagePublisher')]"
                  },
                  "vmImageSku": {
                    "value": "[parameters('vmImageSku')]"
                  },
                  "vmImageVersion": {
                    "value": "[parameters('vmImageVersion')]"
                  },
                  "vmSize": {
                    "value": "[parameters('vmSize')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "8149879062234729869"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "networkInterfaces": {
                      "type": "array"
                    },
                    "vmSize": {
                      "type": "string"
                    },
                    "osDiskCreateOption": {
                      "type": "string"
                    },
                    "osDiskType": {
                      "type": "string"
                    },
                    "vmImagePublisher": {
                      "type": "string"
                    },
                    "vmImageOffer": {
                      "type": "string"
                    },
                    "vmImageSku": {
                      "type": "string"
                    },
                    "vmImageVersion": {
                      "type": "string"
                    },
                    "adminUsername": {
                      "type": "string"
                    },
                    "authenticationType": {
                      "type": "string",
                      "allowedValues": [
                        "sshPublicKey",
                        "password"
                      ]
                    },
                    "adminPasswordOrKey": {
                      "type": "secureString",
                      "minLength": 14
                    }
                  },
                  "functions": [],
                  "variables": {
                    "osProfile": {
                      "sshPublicKey": {
                        "computerName": "[parameters('name')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "linuxConfiguration": {
                          "disablePasswordAuthentication": true,
                          "ssh": {
                            "publicKeys": [
                              {
                                "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                                "keyData": "[parameters('adminPasswordOrKey')]"
                              }
                            ]
                          }
                        }
                      },
                      "password": {
                        "computerName": "[parameters('name')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPasswordOrKey')]"
                      }
                    }
                  },
                  "resources": [
                    {
                      "type": "Microsoft.Compute/virtualMachines",
                      "apiVersion": "2020-06-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "hardwareProfile": {
                          "vmSize": "[parameters('vmSize')]"
                        },
                        "storageProfile": {
                          "osDisk": {
                            "createOption": "[parameters('osDiskCreateOption')]",
                            "managedDisk": {
                              "storageAccountType": "[parameters('osDiskType')]"
                            }
                          },
                          "imageReference": {
                            "publisher": "[parameters('vmImagePublisher')]",
                            "offer": "[parameters('vmImageOffer')]",
                            "sku": "[parameters('vmImageSku')]",
                            "version": "[parameters('vmImageVersion')]"
                          }
                        },
                        "networkProfile": {
                          "networkInterfaces": "[parameters('networkInterfaces')]"
                        },
                        "osProfile": "[variables('osProfile')[parameters('authenticationType')]]"
                      }
                    }
                  ],
                  "outputs": {
                    "adminUsername": {
                      "type": "string",
                      "value": "[parameters('adminUsername')]"
                    },
                    "authenticationType": {
                      "type": "string",
                      "value": "[parameters('authenticationType')]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', format('create-ext-nic-{0}', parameters('deploymentNameSuffix')))]",
                "[resourceId('Microsoft.Resources/deployments', format('create-int-nic-{0}', parameters('deploymentNameSuffix')))]",
                "[resourceId('Microsoft.Resources/deployments', format('create-mgmt-nic-{0}', parameters('deploymentNameSuffix')))]"
              ]
            }
          ],
          "outputs": {
            "internalIpAddress": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', format('create-int-nic-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.ip.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('hubResourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-f5vm01Sshkv-hub-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('hubResourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-nsg-hub-{0}', parameters('deploymentNameSuffix')))]",
        "[subscriptionResourceId('Microsoft.Resources/deployments', format('deploy-rg-hub-{0}', parameters('deploymentNameSuffix')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('hubResourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-vnet-hub-{0}', parameters('deploymentNameSuffix')))]"
      ]
    },
    {
      "copy": {
        "name": "spokeNetworks",
        "count": "[length(variables('spokes'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "[format('deploy-vnet-{0}-{1}', variables('spokes')[copyIndex()].name, parameters('deploymentNameSuffix'))]",
      "resourceGroup": "[variables('spokes')[copyIndex()].resourceGroupName]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('calculatedTags')]"
          },
          "firewallPrivateIPAddress": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('hubResourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-f5vm01-hub-{0}', parameters('deploymentNameSuffix'))), '2019-10-01').outputs.internalIpAddress.value]"
          },
          "virtualNetworkName": {
            "value": "[variables('spokes')[copyIndex()].virtualNetworkName]"
          },
          "virtualNetworkAddressPrefix": {
            "value": "[variables('spokes')[copyIndex()].virtualNetworkAddressPrefix]"
          },
          "networkSecurityGroupName": {
            "value": "[variables('spokes')[copyIndex()].networkSecurityGroupName]"
          },
          "networkSecurityGroupRules": {
            "value": "[variables('spokes')[copyIndex()].networkSecurityGroupRules]"
          },
          "subnetName": {
            "value": "[variables('spokes')[copyIndex()].subnetName]"
          },
          "subnetAddressPrefix": {
            "value": "[variables('spokes')[copyIndex()].subnetAddressPrefix]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "10121303593397484767"
            }
          },
          "parameters": {
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "firewallPrivateIPAddress": {
              "type": "string"
            },
            "virtualNetworkName": {
              "type": "string"
            },
            "virtualNetworkAddressPrefix": {
              "type": "string"
            },
            "networkSecurityGroupName": {
              "type": "string"
            },
            "networkSecurityGroupRules": {
              "type": "array"
            },
            "subnetName": {
              "type": "string"
            },
            "subnetAddressPrefix": {
              "type": "string"
            },
            "routeTableName": {
              "type": "string",
              "defaultValue": "[format('{0}-routetable', parameters('subnetName'))]"
            },
            "routeTableRouteName": {
              "type": "string",
              "defaultValue": "default_route"
            },
            "routeTableRouteAddressPrefix": {
              "type": "string",
              "defaultValue": "0.0.0.0/0"
            },
            "routeTableRouteNextHopIpAddress": {
              "type": "string",
              "defaultValue": "[parameters('firewallPrivateIPAddress')]"
            },
            "routeTableRouteNextHopType": {
              "type": "string",
              "defaultValue": "VirtualAppliance"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "networkSecurityGroup",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('networkSecurityGroupName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "securityRules": {
                    "value": "[parameters('networkSecurityGroupRules')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "2936571795199835323"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "securityRules": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/networkSecurityGroups",
                      "apiVersion": "2018-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "securityRules": "[parameters('securityRules')]"
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "routeTable",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('routeTableName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "routeName": {
                    "value": "[parameters('routeTableRouteName')]"
                  },
                  "routeAddressPrefix": {
                    "value": "[parameters('routeTableRouteAddressPrefix')]"
                  },
                  "routeNextHopIpAddress": {
                    "value": "[parameters('routeTableRouteNextHopIpAddress')]"
                  },
                  "routeNextHopType": {
                    "value": "[parameters('routeTableRouteNextHopType')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "12798828318033328023"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "routeName": {
                      "type": "string"
                    },
                    "routeAddressPrefix": {
                      "type": "string"
                    },
                    "routeNextHopIpAddress": {
                      "type": "string"
                    },
                    "routeNextHopType": {
                      "type": "string"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/routeTables",
                      "apiVersion": "2018-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "routes": [
                          {
                            "name": "[parameters('routeName')]",
                            "properties": {
                              "addressPrefix": "[parameters('routeAddressPrefix')]",
                              "nextHopIpAddress": "[parameters('routeNextHopIpAddress')]",
                              "nextHopType": "[parameters('routeNextHopType')]"
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/routeTables', parameters('name'))]"
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2019-10-01",
              "name": "virtualNetwork",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('virtualNetworkName')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "addressPrefix": {
                    "value": "[parameters('virtualNetworkAddressPrefix')]"
                  },
                  "subnets": {
                    "value": [
                      {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                          "addressPrefix": "[parameters('subnetAddressPrefix')]",
                          "networkSecurityGroup": {
                            "id": "[reference(resourceId('Microsoft.Resources/deployments', 'networkSecurityGroup'), '2019-10-01').outputs.id.value]"
                          },
                          "routeTable": {
                            "id": "[reference(resourceId('Microsoft.Resources/deployments', 'routeTable'), '2019-10-01').outputs.id.value]"
                          }
                        }
                      }
                    ]
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.613.9944",
                      "templateHash": "5037285071021447400"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string"
                    },
                    "location": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {}
                    },
                    "addressPrefix": {
                      "type": "string"
                    },
                    "subnets": {
                      "type": "array"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks",
                      "apiVersion": "2018-11-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "addressSpace": {
                          "addressPrefixes": [
                            "[parameters('addressPrefix')]"
                          ]
                        },
                        "subnets": "[parameters('subnets')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]"
                    },
                    "id": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('name'))]"
                    },
                    "subnets": {
                      "type": "array",
                      "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('name'))).subnets]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'networkSecurityGroup')]",
                "[resourceId('Microsoft.Resources/deployments', 'routeTable')]"
              ]
            }
          ],
          "outputs": {
            "virtualNetworkName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2019-10-01').outputs.name.value]"
            },
            "virtualNetworkResourceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2019-10-01').outputs.id.value]"
            },
            "subnetName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2019-10-01').outputs.subnets.value[0].name]"
            },
            "subnetAddressPrefix": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2019-10-01').outputs.subnets.value[0].properties.addressPrefix]"
            },
            "subnetResourceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'virtualNetwork'), '2019-10-01').outputs.subnets.value[0].id]"
            },
            "networkSecurityGroupName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkSecurityGroup'), '2019-10-01').outputs.name.value]"
            },
            "networkSecurityGroupResourceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Resources/deployments', 'networkSecurityGroup'), '2019-10-01').outputs.id.value]"
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, variables('hubResourceGroupName')), 'Microsoft.Resources/deployments', format('deploy-f5vm01-hub-{0}', parameters('deploymentNameSuffix')))]",
        "spokeResourceGroups"
      ]
    }
  ]
}